<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-2.5.xsd        
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.2.xsd
	">
	<context:component-scan base-package="com.military.content.articles.metrics" />
	
	<bean id="articlesPlaceholderConfigurer" class="com.military.etcdresolver.EtcdPlaceholderConfigurer">
		<property name="restfulPath" value="articles-import" />
		<property name="propertiesArray">
			<list>
				<ref bean="articlesImportProperties" />
			</list>
		</property>
		<property name="overrideProperties" ref="articlesOverrideProperties" />
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
	</bean>

	<bean id="articlesImportProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath*:application.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="true" />
	</bean>

	<bean id="articlesOverrideProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath*:dev.properties</value>
				<value>file:/data/military/conf/articles-import.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="true" />
	</bean>

	<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller" id="jaxbMarshallerBean">
		<property name="classesToBeBound">
			<list>
				<value>com.military.content.articles.bean.FatwireArticleBean</value>
				<value>com.military.content.articles.bean.FatwireImageBean</value>
				<value>com.military.content.articles.source.newscred.bean.NewsCredArticleContentBean
				</value>
			</list>
		</property>
		<property name="marshallerProperties">
			<map>
				<entry>
					<key>
						<util:constant static-field="javax.xml.bind.Marshaller.JAXB_FRAGMENT" />
					</key>
					<value type="java.lang.Boolean">true</value>
				</entry>
			</map>
		</property>
	</bean>

	<bean id="imageDao" class="com.military.content.articles.image.dao.ImageDao">
		<property name="dataImageConfigsFolder" value="${data.image.configs.folder}" />
		<property name="dataImageFilesFolder" value="${data.image.files.folder}" />
	</bean>

	<bean id="fatwireDao" class="com.military.content.articles.fatwire.dao.FatwireDao">
		<property name="dataSource" ref="dataSource" />
		<property name="schemaName" value="${schema.name}" />
	</bean>

	<bean id="fatwireArticlesImport"
		class="com.military.content.articles.upload.FatwireArticlesImport">
	</bean>

	<bean id="xmlFileGenerator"
		class="com.military.content.articles.fatwire.xmlconfig.XMLFileGenerator">
		<property name="marshaller" ref="jaxbMarshallerBean" />
	</bean>
	
	<bean id="articleImportUtil"
		class="com.military.content.articles.util.ArticleImportUtils" init-method="init">
		<property name="articleUrlFilterprepositions" value="${article.url.filter.list}" />
		<property name="fatwireAssetNameLimit" value="${fatwire.asset.name.limit}" />
		<property name="articleUrlSanitizeMap" ref="articleUrlSanitizeMap" />
		<property name="articleHeadlineSanitizeMap" ref="articleHeadlineSanitizeMap" />
	</bean>

	<bean id="articleUrlSanitizeMap" class="java.util.LinkedHashMap">
		<constructor-arg>
			<map key-type="java.lang.String" value-type="java.lang.String">
				<entry key="[ ]*&amp;[ ]*" value=" and " />				
				<entry key="'s" value="" />				
				<entry key="[^A-Za-z0-9 ]" value="" />
			</map>
		</constructor-arg>
	</bean>
	
	<bean id="articleHeadlineSanitizeMap" class="java.util.LinkedHashMap">
		<constructor-arg>
			<map key-type="java.lang.String" value-type="java.lang.String">
				<entry key=":" value="" />
			</map>
		</constructor-arg>
	</bean>

</beans>